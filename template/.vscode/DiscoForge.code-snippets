{
  // BODA Note:
  // This snippet edited by ChatGPT on user request
  // Now using updated command template with discord.js destructuring.

  "DiscoForge Command Snippet": {
    "prefix": ["cmd", "dxc"],
    "scope": "javascript",
    "body": [
      "const {",
      "  ApplicationCommandOptionType,",
      "  EmbedBuilder,",
      "  ActionRowBuilder,",
      "  ButtonBuilder,",
      "  ButtonStyle,",
      "} = require(\"discord.js\");",
      "",
      "/**",
      " * @type {import(\"../../Base/baseCommand\")}",
      " */",
      "module.exports = {",
      "  name: \"${1:commandName}\",",
      "  description: \"${2:commandDescription}\",",
      "  cooldown: 10,",
      "  category: \"${3:general}\",",
      "  botPermissions: [],",
      "  userPermissions: [],",
      "  options: [],",
      "  command: {",
      "    enabled: true,",
      "    aliases: [],",
      "    minArgsCount: 0,",
      "  },",
      "  slashCommand: {",
      "    enabled: true,",
      "  },",
      "",
      "  async msgExecute(client, message, args) {",
      "    ",
      "  },",
      "",
      "  async interactionExecute(client, interaction) {",
      "    ",
      "  },",
      "",
      "  async autocompleteExecute(client, interaction) {",
      "    ",
      "  },",
      "};"
    ],
    "description": "Updated DiscoForge Command Snippet with discord.js structure"
  },

  "DiscoForge Event Snippet": {
    "prefix": ["event"],
    "scope": "javascript",
    "body": [
      "const NEXUS = require(\"../../handlers/Client\");",
      "module.exports = {",
      "  name: \"${1:eventName}\",",
      "  once: ${2:true},",
      "  /**",
      "   * @param {NEXUS} client",
      "   */",
      "  async execute(client) {",
      "    try {",
      "      ${3:// Code}",
      "    } catch (error) {",
      "      console.error(error);",
      "    }",
      "  },",
      "};"
    ],
    "description": "DiscoForge Event Template with client handler and error catching"
  },
  "DiscoForge Component Snippet": {
    "prefix": ["component", "action"],
    "scope": "javascript",
    "body": [
      "/**",
      " * @type {import(\"../../Base/baseComponent\")}",
      " */",
      "module.exports = {",
      "  name: \"${1:componentName}\",",
      "  enabled: true,",
      "  botPermissions: [],",
      "  userPermissions: [],",
      "",
      "  action: async (client, interaction, parts) => {",
      "    await interaction.deferUpdate();",
      "    let member = interaction.member;",
      "",
      "    try {",
      "      ${2:// Code}",
      "    } catch (error) {",
      "      console.error(`Error in ${1:componentName}:`, error);",
      "      await interaction.followUp({",
      "        content: \"ðŸ˜“ i am sorry, it seems like i am having some issues right now, please try again later.\",",
      "        ephemeral: true,",
      "      });",
      "    }",
      "  },",
      "};"
    ],
    "description": "DiscoForge Component Template for buttons/selects with error handling"
  }
}
